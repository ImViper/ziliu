'use client';

import { useState } from 'react';
import { useRouter } from 'next/navigation';
import { ArrowLeft, Save } from 'lucide-react';
import { Breadcrumb } from '@/components/ui/breadcrumb';
import { RichTextEditor } from '@/components/ui/rich-text-editor';

interface PresetForm {
  name: string;
  authorName: string;
  autoGenerateDigest: boolean;
  enableFeaturedArticles: boolean;
  customContent: string;
  recommendedAccount: string;
  isDefault: boolean;
}

export default function NewPresetPage() {
  const router = useRouter();
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState('');
  const [form, setForm] = useState<PresetForm>({
    name: '',
    authorName: '',
    autoGenerateDigest: true,
    enableFeaturedArticles: false,
    customContent: '',
    recommendedAccount: '',
    isDefault: false,
  });

  const handleSubmit = async (e: React.FormEvent) => {
    e.preventDefault();
    
    if (!form.name.trim()) {
      setError('请输入预设名称');
      return;
    }

    try {
      setLoading(true);
      setError('');

      const response = await fetch('/api/presets', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(form),
      });

      const data = await response.json();

      if (data.success) {
        router.push('/dashboard/presets');
      } else {
        setError(data.error || '创建预设失败');
      }
    } catch (error) {
      console.error('创建预设失败:', error);
      setError('创建预设失败');
    } finally {
      setLoading(false);
    }
  };

  const handleInputChange = (field: keyof PresetForm, value: string | boolean) => {
    setForm(prev => ({
      ...prev,
      [field]: value,
    }));
  };

  return (
    <div className="min-h-screen bg-gray-50">
      <div className="max-w-2xl mx-auto py-8 px-4">
        {/* 面包屑导航 */}
        <Breadcrumb
          items={[
            { label: '发布预设', href: '/dashboard/presets' },
            { label: '新建预设' }
          ]}
          className="mb-6"
        />

        {/* 页面标题 */}
        <div className="flex items-center gap-4 mb-8">
          <button
            onClick={() => router.push('/dashboard/presets')}
            className="p-2 text-gray-400 hover:text-gray-600 transition-colors"
            title="返回预设管理"
          >
            <ArrowLeft className="w-6 h-6" />
          </button>
          <div>
            <h1 className="text-3xl font-bold text-gray-900">新建发布预设</h1>
            <p className="mt-2 text-gray-600">创建一个新的发布预设模板</p>
          </div>
        </div>

        {/* 错误提示 */}
        {error && (
          <div className="mb-6 p-4 bg-red-50 border border-red-200 rounded-lg">
            <p className="text-red-600">{error}</p>
          </div>
        )}

        {/* 表单 */}
        <form onSubmit={handleSubmit} className="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
          <div className="space-y-6">
            {/* 基本信息 */}
            <div>
              <h3 className="text-lg font-medium text-gray-900 mb-4">基本信息</h3>
              <div className="space-y-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    预设名称 *
                  </label>
                  <input
                    type="text"
                    value={form.name}
                    onChange={(e) => handleInputChange('name', e.target.value)}
                    placeholder="例如：技术文章预设"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    required
                  />
                </div>

                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    作者名称
                  </label>
                  <input
                    type="text"
                    value={form.authorName}
                    onChange={(e) => handleInputChange('authorName', e.target.value)}
                    placeholder="例如：孟健"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
              </div>
            </div>

            {/* 发布设置 */}
            <div>
              <h3 className="text-lg font-medium text-gray-900 mb-4">发布设置</h3>
              <div className="space-y-4">
                <div className="flex items-center">
                  <input
                    type="checkbox"
                    id="autoGenerateDigest"
                    checked={form.autoGenerateDigest}
                    onChange={(e) => handleInputChange('autoGenerateDigest', e.target.checked)}
                    className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                  />
                  <label htmlFor="autoGenerateDigest" className="ml-2 block text-sm text-gray-900">
                    自动生成摘要
                  </label>
                </div>
                <p className="text-xs text-gray-500 ml-6">插件会自动提取正文前120个字符作为摘要</p>

                <div className="flex items-center">
                  <input
                    type="checkbox"
                    id="isDefault"
                    checked={form.isDefault}
                    onChange={(e) => handleInputChange('isDefault', e.target.checked)}
                    className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                  />
                  <label htmlFor="isDefault" className="ml-2 block text-sm text-gray-900">
                    设为默认预设
                  </label>
                </div>
              </div>
            </div>

            {/* 内容增强设置 */}
            <div>
              <h3 className="text-lg font-medium text-gray-900 mb-4">内容增强设置</h3>

              <div className="space-y-4">
                {/* 精选文章开关 */}
                <div className="flex items-center">
                  <input
                    type="checkbox"
                    id="enableFeaturedArticles"
                    checked={form.enableFeaturedArticles}
                    onChange={(e) => handleInputChange('enableFeaturedArticles', e.target.checked)}
                    className="h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                  />
                  <label htmlFor="enableFeaturedArticles" className="ml-2 block text-sm text-gray-900">
                    启用精选文章推荐
                  </label>
                </div>
                <p className="text-xs text-gray-500 ml-6">插件会智能匹配相关文章并添加到文章末尾</p>

                {/* 末尾定制内容 */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    末尾定制内容
                  </label>
                  <p className="text-xs text-gray-500 mb-3">在文章末尾添加自定义富文本内容，支持图片、链接等</p>
                  <RichTextEditor
                    value={form.customContent}
                    onChange={(value) => handleInputChange('customContent', value)}
                    placeholder="例如：个人介绍、联系方式、产品推广等..."
                    className="mt-2"
                  />
                </div>

                {/* 推荐公众号 */}
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">
                    推荐公众号
                  </label>
                  <p className="text-xs text-gray-500 mb-3">插件会在文章末尾插入公众号推荐卡片</p>
                  <input
                    type="text"
                    value={form.recommendedAccount}
                    onChange={(e) => handleInputChange('recommendedAccount', e.target.value)}
                    placeholder="例如：技术圈内参"
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
              </div>
            </div>


          </div>

          {/* 提交按钮 */}
          <div className="mt-8 flex justify-end gap-4">
            <button
              type="button"
              onClick={() => router.push('/dashboard/presets')}
              className="px-4 py-2 text-gray-700 bg-gray-100 rounded-lg hover:bg-gray-200 transition-colors"
            >
              取消
            </button>
            <button
              type="submit"
              disabled={loading}
              className="inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors disabled:opacity-50"
            >
              {loading ? (
                <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2"></div>
              ) : (
                <Save className="w-4 h-4 mr-2" />
              )}
              {loading ? '创建中...' : '创建预设'}
            </button>
          </div>
        </form>
      </div>
    </div>
  );
}
